/*
1964번 오각형,오각형,오각형...

문제의 그림과 같은 단계를 구현하는 문제
1단계 = 5, 2단계 = 5+7 12, 3단계 = 5+7+10 22
4단계 = 5 + 7 + 10 + 13 35 의 등차수열 모습

일반식을 구하고 재귀함수를 생각해보았다.
2 * (1 + n) + n - 1

그리고 N의 값이 큰 경우 오버플로우가 발생하므로 N단계에서 점의 개수를 45678로 나눈 나머지를 출력한다는
조건이 붙어있는데 이 조건을 추가하고도 오버플로우가 발생하였다.

채점 결과 맞았다. 다만, 문제의 입력 조건 N의 10000~최대값을 입력하는 경우 오버플로우가 발생하였다.
C++ 정수 데이터 타입에 대한 공부가 좀 더 필요한 것 같다.
추가 공부 : https://offbyone.tistory.com/115
*/

#include<iostream>

using namespace std;

long long int sum(int n)
{
	if (n == 1)
		return  5;
	return 2 * (1 + n) + n-1 +sum(n-1);
}

int main()
{
	long long int n = 0;
	cin >> n;
	n = sum(n) % 45678;
	cout << n;
}