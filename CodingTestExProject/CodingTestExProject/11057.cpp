/*
11057 오르막 수

오르막 수는 수의 자리가 오름차순을 이루는 수를 말한다. 이때, 인접한 수가 같아도 오름차순으로 친다.
예를 들어, 2234와 3678, 11119는 오르막 수이지만, 2232, 3676, 91111은 오르막 수가 아니다.
수의 길이 N이 주어졌을 때, 오르막 수의 개수를 구하는 프로그램을 작성하시오. 수는 0으로 시작할 수 있다.

보자마자 이건 DP 문제라고 생각이 든게 자리수로 답이 나눠지고 나오는 수가 이전 자리수와 연관되어 보였기 때문이다.

dp[1] = 10 dp[2] = 55 dp[3] = 220 dp 1과 2를 보면 1~10의 합이 55인 것을 볼 수 있는데
이를 이차원 배열 적어가다보면 dp[i][j] = dp[i][j - 1] + dp[i - 1][j] 점화식을 발견할 수 있다.

첫째 줄에 길이가 N인 오르막 수의 개수를 10,007로 나눈 나머지를 출력한다.

+)
10007나눠주는 것 때문에 2번 틀린문제 31번에서 해주고 덧셈을 하는 과정에서도 해줘야한다.
처음에 1000 테케 넣어보고 답나온다고 바로 답 넣었는데 틀려놓고 1000넣으면 10007 넘는 수 나온걸 확인을 못했다..실수 하지말자 
*/
#include <iostream>
using namespace std;

int dp[1002][11] = { 0, };
int N;
int sum = 0;

int main() {
	cin >> N;
	for (int i = 1; i <= 10; i++)
		dp[1][i] = 1;
	for (int i = 2; i <= N; i++)
	{
		for (int j = 1; j <= 10; j++)
		{
			dp[i][j] = (dp[i][j - 1] + dp[i - 1][j]) % 10007;
		}
	}
	for (int i = 1; i <= 10; i++)
		sum = (sum + dp[N][i]) % 10007;
	cout << sum;
	return 0;
}