/*
2670 연속부분최대곱

N개의 실수가 있을 때, 한 개 이상의 연속된 수들의 곱이 최대가 되는 부분을 찾아, 
그 곱을 출력하는 프로그램을 작성하시오.

첫째 줄은 나열된 양의 실수들의 개수 N이 주어지고, 그 다음 줄부터 N개의 수가 한 줄에 하나씩 들어 있다. N은 10,000 이하의 자연수이다. 실수는 소수점 첫째자리까지 주어지며,
0.0보다 크거나 같고, 9.9보다 작거나 같다.

천천히 혼자 생각해보면서 풀어보았던 첫 dp문제
분명 dp가 이렇게 푸는게 맞는데..?코드만 보면 뭔가 부족해보이는 것 같다.
좀 더 풀다보면 이해가 딱 되지않을까 싶다.

첫 제출에 float형으로 제출했다가 틀렸었는데
아마 연속값이 큰 경우 double까지 되나보다 중간 계산에 버려주는 과정이 없어서 틀렸던 것 같다.
분명 한번 생각했던 건데 풀면서 까먹어서..제출해보고 뭐지 dp 풀이가 잘못된 건가 삽질했던 부분이 아쉽다.
*/
#include <iostream>
#include <algorithm>
using namespace std;

double arr[10001];
double dp[10001];

int main() {
	int N;
	double m = 0;
	cin >> N;
	for (int i = 0; i < N; i++)
	{
		cin >> arr[i];
	}
	dp[0] = arr[0];
	for (int i = 1; i < N; i++)
	{
		dp[i] = max(arr[i], arr[i] * dp[i - 1]);
		if (m < dp[i])
			m = dp[i];
	}
	printf("%0.3f", m);
	return 0;
}